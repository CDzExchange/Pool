/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BEP20Mock, BEP20MockInterface } from "../BEP20Mock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "supply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620012603803806200126083398101604081905262000034916200035a565b82826200004a620000446200009a565b6200009e565b81516200005f90600490602085019062000209565b5080516200007590600590602084019062000209565b50506006805460ff1916601217905550620000913382620000ee565b505050620004b9565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038216620001205760405162461bcd60e51b8152600401620001179062000401565b60405180910390fd5b6200013c81600354620001ce60201b620005d91790919060201c565b6003556001600160a01b03821660009081526001602090815260409091205462000171918390620005d9620001ce821b17901c565b6001600160a01b0383166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90620001c290859062000438565b60405180910390a35050565b600080620001dd838562000441565b905083811015620002025760405162461bcd60e51b81526004016200011790620003ca565b9392505050565b828054620002179062000466565b90600052602060002090601f0160209004810192826200023b576000855562000286565b82601f106200025657805160ff191683800117855562000286565b8280016001018555821562000286579182015b828111156200028657825182559160200191906001019062000269565b506200029492915062000298565b5090565b5b8082111562000294576000815560010162000299565b600082601f830112620002c0578081fd5b81516001600160401b0380821115620002dd57620002dd620004a3565b6040516020601f8401601f1916820181018381118382101715620003055762000305620004a3565b60405283825285840181018710156200031c578485fd5b8492505b838310156200033f578583018101518284018201529182019162000320565b838311156200035057848185840101525b5095945050505050565b6000806000606084860312156200036f578283fd5b83516001600160401b038082111562000386578485fd5b6200039487838801620002af565b94506020860151915080821115620003aa578384fd5b50620003b986828701620002af565b925050604084015190509250925092565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b6020808252601f908201527f42455032303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b600082198211156200046157634e487b7160e01b81526011600452602481fd5b500190565b6002810460018216806200047b57607f821691505b602082108114156200049d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b610d9780620004c96000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063893d20e811610097578063a457c2d711610066578063a457c2d7146101e8578063a9059cbb146101fb578063dd62ed3e1461020e578063f2fde38b1461022157610100565b8063893d20e8146101b05780638da5cb5b146101c557806395d89b41146101cd578063a0712d68146101d557610100565b8063313ce567116100d3578063313ce5671461016b578063395093511461018057806370a0823114610193578063715018a6146101a657610100565b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014357806323b872dd14610158575b600080fd5b61010d610234565b60405161011a9190610a0d565b60405180910390f35b6101366101313660046109ad565b6102c6565b60405161011a9190610a02565b61014b6102e3565b60405161011a9190610c57565b610136610166366004610972565b6102e9565b610173610370565b60405161011a9190610c60565b61013661018e3660046109ad565b610379565b61014b6101a1366004610926565b6103c7565b6101ae6103e6565b005b6101b861043a565b60405161011a91906109ee565b6101b8610449565b61010d610458565b6101366101e33660046109d6565b610467565b6101366101f63660046109ad565b6104c1565b6101366102093660046109ad565b610529565b61014b61021c366004610940565b61053d565b6101ae61022f366004610926565b610568565b60606004805461024390610c9d565b80601f016020809104026020016040519081016040528092919081815260200182805461026f90610c9d565b80156102bc5780601f10610291576101008083540402835291602001916102bc565b820191906000526020600020905b81548152906001019060200180831161029f57829003601f168201915b5050505050905090565b60006102da6102d361060f565b8484610613565b50600192915050565b60035490565b60006102f68484846106c7565b6103668461030261060f565b61036185604051806060016040528060288152602001610cef602891396001600160a01b038a1660009081526002602052604081209061034061060f565b6001600160a01b0316815260208101919091526040016000205491906107d1565b610613565b5060019392505050565b60065460ff1690565b60006102da61038661060f565b84610361856002600061039761060f565b6001600160a01b03908116825260208083019390935260409182016000908120918c1681529252902054906105d9565b6001600160a01b0381166000908152600160205260409020545b919050565b6103ee61060f565b6001600160a01b03166103ff610449565b6001600160a01b03161461042e5760405162461bcd60e51b815260040161042590610b9d565b60405180910390fd5b610438600061080b565b565b6000610444610449565b905090565b6000546001600160a01b031690565b60606005805461024390610c9d565b600061047161060f565b6001600160a01b0316610482610449565b6001600160a01b0316146104a85760405162461bcd60e51b815260040161042590610b9d565b6104b96104b361060f565b8361085b565b506001919050565b60006102da6104ce61060f565b8461036185604051806060016040528060258152602001610d3d60259139600260006104f861060f565b6001600160a01b03908116825260208083019390935260409182016000908120918d168152925290205491906107d1565b60006102da61053661060f565b84846106c7565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b61057061060f565b6001600160a01b0316610581610449565b6001600160a01b0316146105a75760405162461bcd60e51b815260040161042590610b9d565b6001600160a01b0381166105cd5760405162461bcd60e51b815260040161042590610ae9565b6105d68161080b565b50565b6000806105e68385610c6e565b9050838110156106085760405162461bcd60e51b815260040161042590610b2f565b9392505050565b3390565b6001600160a01b0383166106395760405162461bcd60e51b815260040161042590610aa5565b6001600160a01b03821661065f5760405162461bcd60e51b815260040161042590610c15565b6001600160a01b0380841660008181526002602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906106ba908590610c57565b60405180910390a3505050565b6001600160a01b0383166106ed5760405162461bcd60e51b815260040161042590610a60565b6001600160a01b0382166107135760405162461bcd60e51b815260040161042590610bd2565b61075081604051806060016040528060268152602001610d17602691396001600160a01b03861660009081526001602052604090205491906107d1565b6001600160a01b03808516600090815260016020526040808220939093559084168152205461077f90826105d9565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906106ba908590610c57565b600081848411156107f55760405162461bcd60e51b81526004016104259190610a0d565b5060006108028486610c86565b95945050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0382166108815760405162461bcd60e51b815260040161042590610b66565b60035461088e90826105d9565b6003556001600160a01b0382166000908152600160205260409020546108b490826105d9565b6001600160a01b0383166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610903908590610c57565b60405180910390a35050565b80356001600160a01b03811681146103e157600080fd5b600060208284031215610937578081fd5b6106088261090f565b60008060408385031215610952578081fd5b61095b8361090f565b91506109696020840161090f565b90509250929050565b600080600060608486031215610986578081fd5b61098f8461090f565b925061099d6020850161090f565b9150604084013590509250925092565b600080604083850312156109bf578182fd5b6109c88361090f565b946020939093013593505050565b6000602082840312156109e7578081fd5b5035919050565b6001600160a01b0391909116815260200190565b901515815260200190565b6000602080835283518082850152825b81811015610a3957858101830151858201604001528201610a1d565b81811115610a4a5783604083870101525b50601f01601f1916929092016040019392505050565b60208082526025908201527f42455032303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f42455032303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b6020808252601f908201527f42455032303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526023908201527f42455032303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f42455032303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b90815260200190565b60ff91909116815260200190565b60008219821115610c8157610c81610cd8565b500190565b600082821015610c9857610c98610cd8565b500390565b600281046001821680610cb157607f821691505b60208210811415610cd257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfe42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212200851522ce91ff3c96d23c09e6754c917f89f1417def8d9b9e28a9ded112757c064736f6c63430008000033";

export class BEP20Mock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    name: string,
    symbol: string,
    supply: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BEP20Mock> {
    return super.deploy(
      name,
      symbol,
      supply,
      overrides || {}
    ) as Promise<BEP20Mock>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    supply: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, supply, overrides || {});
  }
  attach(address: string): BEP20Mock {
    return super.attach(address) as BEP20Mock;
  }
  connect(signer: Signer): BEP20Mock__factory {
    return super.connect(signer) as BEP20Mock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BEP20MockInterface {
    return new utils.Interface(_abi) as BEP20MockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BEP20Mock {
    return new Contract(address, _abi, signerOrProvider) as BEP20Mock;
  }
}
